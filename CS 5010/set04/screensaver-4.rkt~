#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.2.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 65 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 9520 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 183
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname screensav"
 #"er-4) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t c"
 #"onstructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"extras.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 11 #"screensaver"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 13 #"initial-world"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 16 #"world-after-tick"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 21 #"world-after-key-event"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 11 #"world-rects"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 13 #"world-paused?"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 6 #"rect-x"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 6 #"rect-y"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 7 #"rect-vx"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 7 #"rect-vy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 22 #"rect-after-mouse-event"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 14 #"rect-selected?"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 13 #"new-rectangle"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";Constants definition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"CANVAS-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"CANVAS-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"RECTANGLE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"RECTANGLE-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"RIGHT-MOST-POS"
0 0 24 3 1 #" "
0 0 21 3 3 #"370"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"LEFT-MOST-POS"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"UPPER-MOST-POS"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"LOWER-MOST-POS"
0 0 24 3 1 #" "
0 0 21 3 3 #"275"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"HALF-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 13 #"LEFT-MOST-POS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"HALF-LEN"
0 0 24 3 1 #" "
0 0 14 3 14 #"UPPER-MOST-POS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"DRAW-RECTANGLE"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 15 #"RECTANGLE-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 16 #"RECTANGLE-HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"DRAW-RED-RECTANGLE"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 15 #"RECTANGLE-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 16 #"RECTANGLE-HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"DRAW-CANVAS"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 12 #"CANVAS-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 13 #"CANVAS-HEIGHT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"PAUSE"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";Data definition"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";world: (make-world rectangle rectangle boolean coordinate coordinat"
 #"e)"
) 0 0 24 29 1 #"\n"
0 0 17 3 68
#";INTERPRETATION: (make rec1 rec2 ifpaused x-coord y-coord), in which"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; rec1 is a rectangle object inside the world"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; rec2 is another rectangle object inside the world"
0 0 24 29 1 #"\n"
0 0 17 3 63
#"; ifpaused is a boolean value indicating if the world is paused"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; x-coord is an NonNegInteger representing the x coordinate of the m"
 #"ouse"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; y-coord is an NonNegInteger representing the y coordinate of the m"
 #"ouse"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #" ("
0 0 14 3 5 #"rects"
0 0 24 3 1 #" "
0 0 14 3 7 #"paused?"
0 0 24 3 1 #" "
0 0 14 3 6 #"mousex"
0 0 24 3 1 #" "
0 0 14 3 6 #"mousey"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Template"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"world-fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rects"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"world-mx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"world-my"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";rect-info: (make-rect-info coordinate coordinate velocity-x-dir vel"
 #"ocity-y-dir boolean)"
) 0 0 24 29 1 #"\n"
0 0 17 3 60
#";INTERPRETATION: (make-rect-info x y vx vy select), in which"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";x is a NonNegInteger representing the x coordinate of the rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";y is a NonNegInteger representing the y coordinate of the rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";vx is is an Integer representing the velocity on the x direction of"
 #" the rectangle"
) 0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";vy is is an Integer representing the velocity on the y direction of"
 #" the rectangle"
) 0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";select is a boolean value representing if the rectangle is selected"
 #" by mouse"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 9 #"rect-info"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 2 #"rx"
0 0 24 3 1 #" "
0 0 14 3 2 #"ry"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Template"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-fn"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; screensaver : PosReal -> WorldState"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; GIVEN: the speed of the simulation, in seconds/tick"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; EFFECT: runs the simulation, starting with the initial state as"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; specified in the problem set."
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; RETURNS: the final state of the world"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Example: (screensaver 0.5)"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; Strategy: Using template for big-bang, also using simpler functio"
 #"ns"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"screensaver"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 24 3 2 #" ("
0 0 14 3 13 #"initial-world"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 16 #"world-after-tick"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"on-mouse"
0 0 24 3 1 #" "
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"on-draw"
0 0 24 3 1 #" "
0 0 14 3 15 #"draw-real-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; initial-world : Any -> WorldState"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; GIVEN: any value (ignored)"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; RETURNS: the initial world specified in the problem set"
0 0 24 29 1 #"\n"
0 0 17 3 131
(
 #";; Example: (initial-world 3) -> (make-world (make-rect-info 200 100"
 #" -12 20 false) (make-rect-info 200 200 23 -14 false) false 0 0)"
) 0 0 24 29 1 #"\n"
0 0 17 3 54 #";; Strategy: using template method of rectangle struct"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"initial-world"
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(begin-for-test"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #" ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 13 #"initial-world"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"-12"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 32 #" 23 -14 false 10 20) true 0 0)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; world-after-tick : WorldState -> WorldState"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; GIVEN: a world state"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; RETURNS: the world state that should follow the given world state"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; after a tick."
0 0 24 29 1 #"\n"
0 0 17 3 129
(
 #";; Example: (world-after-tick (make-world (make-rect-info 200 100 -1"
 #"2 20 false) (make-rect-info 200 200 23 -14 false) false 0 0))"
) 0 0 24 29 1 #"\n"
0 0 17 3 111
(
 #";;        -> (make-world (make-rect-info 188 120 -12 20 false) (make"
 #"-rect-info 223 186 23 -14 false) false 0 0)"
) 0 0 24 29 1 #"\n"
0 0 17 3 109
(
 #";;Strategy: dividing into cases; using template of world struct and "
 #"rectangle struct; using simpler functions"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"world-after-tick"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rects"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))) "
0 0 14 3 1 #"w"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 26 #"rects-after-tick-recursive"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rects"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-mousex"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-mousey"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;rect-after-tick-recursive"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 26 #"rects-after-tick-recursive"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 14 3 5 #"rects"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 11 #"if-selected"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 3 #") ("
0 0 14 3 26 #"rects-after-tick-recursive"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")) ("
0 0 14 3 26 #"rects-after-tick-recursive"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(begin-for-test"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 16 #"world-after-tick"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"-12"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 31 #" 23 -14 false 10 20) true 0 0))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"-12"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"23"
0 0 17 3 56
#" -14 false 10 20) true 0 0)  \"should return same world\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 16 #"world-after-tick"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"-12"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 32 #" 23 -14 false 10 20) false 0 0))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"188"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"-12"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"223"
0 0 17 3 1 #" "
0 0 17 3 3 #"186"
0 0 17 3 1 #" "
0 0 17 3 2 #"23"
0 0 17 3 55 #" -14 false 10 20) false 0 0) \"Wrong coordinate update\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 16 #"world-after-tick"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"-12"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 31 #" 23 -14 true 10 20) false 0 0))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"-12"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 4 #")  ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"23"
0 0 17 3 54 #" -14 true 10 20) false 0 0) \"Wrong coordinate update\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"world"
0 0 17 3 1 #"-"
0 0 17 3 10 #"after-tick"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"-12"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 32 #" 23 -14 false 10 20) false 0 0))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"-12"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"223"
0 0 17 3 1 #" "
0 0 17 3 3 #"186"
0 0 17 3 1 #" "
0 0 17 3 2 #"23"
0 0 17 3 55 #" -14 false 10 20) false 0 0) \"Wrong coordinate update\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 16 #"world-after-tick"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 4 #" 100"
0 0 17 3 1 #" "
0 0 17 3 3 #"-12"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 31 #" 23 -14 true 10 20) false 0 0))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"188"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"-12"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"23"
0 0 17 3 53 #" -14 true 10 20)false 0 0) \"Wrong coordinate update\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 16 #"world-after-tick"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"-12"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 30 #" 23 -14 true 10 20) true 0 0))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"              "
0 0 17 3 1 #" "
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"-12"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"23"
0 0 17 3 54 #" -14 true 10 20) true 0 0) \"Wrong coordinate update\"))"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";                "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";rect-after-tick: rectangle -> rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";GIVEN: a rectangle object"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";RETURNS: a rectangle object that follows the given one after the ti"
 #"ck"
) 0 0 24 29 1 #"\n"
0 0 17 3 105
(
 #";Example: (rect-after-tick (make-rect-info 100 120 -10 15 false)) ->"
 #" (make-rect-info 90 135 -10 15 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";Strategy: dividing into cases; using template of rectangle struct; "
 #"combining simpler functions"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 14 #"RIGHT-MOST-POS"
0 0 24 3 3 #") ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 14 #"LOWER-MOST-POS"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"perfect-bounce"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 14 #"RIGHT-MOST-POS"
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 14 #"UPPER-MOST-POS"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"perfect-bounce"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 13 #"LEFT-MOST-POS"
0 0 24 3 3 #") ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 14 #"LOWER-MOST-POS"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"perfect-bounce"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 13 #"LEFT-MOST-POS"
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 14 #"UPPER-MOST-POS"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"perfect-bounce"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 13 #"LEFT-MOST-POS"
0 0 24 3 3 #") ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 14 #"RIGHT-MOST-POS"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"reverse-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 14 #"UPPER-MOST-POS"
0 0 24 3 3 #") ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 14 #"LOWER-MOST-POS"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"reverse-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 19 #"check-hit-wall-both"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 14 #"move-less-both"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 16 #"check-hit-wall-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 11 #"move-less-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 16 #"check-hit-wall-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 11 #"move-less-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"normal-move"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 3 #"135"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 3 #"275"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 3 #"260"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"370"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"360"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"370"
0 0 24 3 1 #" "
0 0 21 3 3 #"275"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"360"
0 0 24 3 1 #" "
0 0 21 3 3 #"260"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 3 #"225"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 3 #"210"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"370"
0 0 24 3 1 #" "
0 0 21 3 3 #"225"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"360"
0 0 24 3 1 #" "
0 0 21 3 3 #"210"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"320"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"310"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"320"
0 0 24 3 1 #" "
0 0 21 3 3 #"275"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"310"
0 0 24 3 1 #" "
0 0 21 3 3 #"260"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #" "
0 0 21 3 3 #"274"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 3 #"275"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"369"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"370"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"369"
0 0 24 3 1 #" "
0 0 21 3 3 #"274"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"370"
0 0 24 3 1 #" "
0 0 21 3 3 #"275"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #" "
0 0 21 3 3 #"225"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 3 #"210"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"369"
0 0 24 3 1 #" "
0 0 21 3 3 #"225"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"370"
0 0 24 3 1 #" "
0 0 21 3 3 #"210"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"290"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"274"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"290"
0 0 24 3 1 #" "
0 0 21 3 3 #"275"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 19 3 21 #"\"Wrong rect movement\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";check-hit-wall-both: rectangle -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";INTERP: this function checks the condition for perfect bounce"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";GIVEN: a rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 125
(
 #";RETURNS: a boolean value representing whether at the current veloci"
 #"ty, the rectangle would hit 2 of the 4 walls concurrently"
) 0 0 24 29 1 #"\n"
0 0 17 3 27 #";         in the next tick."
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";Example: (check-hit-wall-both (make-rect-info 368 274 10 11 false))"
 #" -> true"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";         (check-hit-wall-both (make-rect-info 368 270 1 2 false)) -"
 #"> false"
) 0 0 24 29 1 #"\n"
0 0 17 3 38 #";Strategy: combining simpler functions"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"check-hit-wall-both"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 16 #"check-hit-wall-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 16 #"check-hit-wall-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";move-less-both: rectangle -> rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 106
(
 #";INTERP: this function handles the situation, where in next tick the"
 #" rectangle would cross two walls under"
) 0 0 24 29 1 #"\n"
0 0 17 3 105
(
 #";        its current velocity, by setting the rectangle tangential t"
 #"o two walls instead of out of bounds."
) 0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #";GIVEN: a rectangle that under its current velocity would cross two "
 #"walls in the next tick."
) 0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";RETURNS: a rectangle that follows the given one after the tick, tan"
 #"gential to two walls."
) 0 0 24 29 1 #"\n"
0 0 17 3 103
(
 #";Example: (move-less-both (make-rect-info 365 270 15 15 false)) -> ("
 #"make-rect-info 370 275 15 15 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 30 #";Strategy: dividing into cases"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-less-both"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 14 #"RIGHT-MOST-POS"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 14 #"LOWER-MOST-POS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 14 3 14 #"RIGHT-MOST-POS"
0 0 24 3 1 #" "
0 0 14 3 14 #"LOWER-MOST-POS"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 14 #"RIGHT-MOST-POS"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 14 #"UPPER-MOST-POS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 14 3 14 #"RIGHT-MOST-POS"
0 0 24 3 1 #" "
0 0 14 3 14 #"UPPER-MOST-POS"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 13 #"LEFT-MOST-POS"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 14 #"LOWER-MOST-POS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 14 3 13 #"LEFT-MOST-POS"
0 0 24 3 1 #" "
0 0 14 3 14 #"LOWER-MOST-POS"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 13 #"LEFT-MOST-POS"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 14 #"UPPER-MOST-POS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 14 3 13 #"LEFT-MOST-POS"
0 0 24 3 1 #" "
0 0 14 3 14 #"UPPER-MOST-POS"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";check-hit-wall-x: rectangle -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";GIVEN: a rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";RETURNS: boolean value representing if the rectangle's x-position i"
 #"s out of bounds."
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";Example: (check-hit-wall-x (make-rect-info 22 144 12 13 false) -> t"
 #"rue"
) 0 0 24 29 1 #"\n"
0 0 17 3 59
#";Strategy: dividing into cases; using template of rectangle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"check-hit-wall-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 14 #"RIGHT-MOST-POS"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 14 #"RIGHT-MOST-POS"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 13 #"LEFT-MOST-POS"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 13 #"LEFT-MOST-POS"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";check-hit-wall-y: rectangle -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";GIVEN: a rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";RETURNS: boolean value representing if the rectangle's y-position i"
 #"s out of bounds."
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";Example: (check-hit-wall-y (make-rect-info 222 143 12 13 true) -> f"
 #"alse"
) 0 0 24 29 1 #"\n"
0 0 17 3 59
#";Strategy: dividing into cases; using template of rectangle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"check-hit-wall-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 14 #"LOWER-MOST-POS"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 14 #"LOWER-MOST-POS"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 14 #"UPPER-MOST-POS"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 14 #"UPPER-MOST-POS"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";move-less-x: rectangle -> rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #";INTERP: this function handles the situation, where in next tick the"
 #" rectangle's side would cross "
) 0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";        left or right wall under its current velocity, by setting t"
 #"he rectangle tangential to"
) 0 0 24 29 1 #"\n"
0 0 17 3 36 #";        wall instead of hitting it."
0 0 24 29 1 #"\n"
0 0 17 3 97
(
 #";GIVEN: a rectangle that under its current velocity would cross left"
 #"/right wall in the next tick."
) 0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";RETURNS: a rectangle that follows the given one after the tick, tan"
 #"gential to the wall."
) 0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #";Example: (move-less-x (make-rect-info 365 270 15 2 false)) -> (make"
 #"-rect-info 370 272 15 2 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 59
#";Strategy: dividing into cases; using template of rectangle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-less-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 14 #"RIGHT-MOST-POS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 14 3 14 #"RIGHT-MOST-POS"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 14 3 13 #"LEFT-MOST-POS"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";move-less-y: rectangle -> rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #";INTERP: this function handles the situation, where in next tick the"
 #" rectangle's side would cross "
) 0 0 24 29 1 #"\n"
0 0 17 3 99
(
 #";        upper or lower wall under its current velocity, by setting "
 #"the rectangle tangential to the"
) 0 0 24 29 1 #"\n"
0 0 17 3 36 #";        wall instead of hitting it."
0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #";GIVEN: a rectangle that under its current velocity would cross uppe"
 #"r/lower wall in the next tick."
) 0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";RETURNS: a rectangle that follows the given one after the tick, tan"
 #"gential to the wall."
) 0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #";Example: (move-less-y (make-rect-info 365 270 3 11 false)) -> (make"
 #"-rect-info 370 275 3 11 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 59
#";Strategy: dividing into cases; using template of rectangle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-less-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 14 #"LOWER-MOST-POS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 14 #"LOWER-MOST-POS"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 14 3 14 #"UPPER-MOST-POS"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";perfect-bounce rectangle -> rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";GIVEN: a rectangle tangential to two walls"
0 0 24 29 1 #"\n"
0 0 17 3 109
(
 #";RETURNS: a rectangle that follows the given one after the tick, wit"
 #"h its x-velocity and y-velocity reversed,"
) 0 0 24 29 1 #"\n"
0 0 17 3 102
(
 #";         and x-position and y-position bounced back by a distance e"
 #"qual to its corresponding velocity"
) 0 0 24 29 1 #"\n"
0 0 17 3 101
(
 #";Example: (perfect-bounce (make-rect-info 30 25 -10 -15 false)) -> ("
 #"make-rect-info 40 40 10 15 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #";Strategy: using template of rectangle; "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"perfect-bounce"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";reverse-x: rectangle -> rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";GIVEN: a rectangle tangential to left/right wall"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";RETURNS: a rectangle that follows the given one after the tick, wit"
 #"h its x-velocity reversed,"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";         and x-position bounced back by a distance equal to the vel"
 #"ocity"
) 0 0 24 29 1 #"\n"
0 0 17 3 97
(
 #";Example: (reverse-x (make-rect-info 30 250 -10 15 false)) -> (make-"
 #"rect-info 40 265 10 15 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 61
#";Strategy: dividing into cases; using template of rectangle; "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"reverse-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";reverse-y: rectangle -> rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";GIVEN: a rectangle tangential to lower/upper wall"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";RETURNS: a rectangle that follows the given one after the tick, wit"
 #"h its y-velocity reversed,"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";         and y-position bounced back by a distance equal to the vel"
 #"ocity"
) 0 0 24 29 1 #"\n"
0 0 17 3 97
(
 #";Example: (reverse-y (make-rect-info 35 275 10 15 false)) -> (make-r"
 #"ect-info 40 260 10 -15 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 61
#";Strategy: dividing into cases; using template of rectangle; "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"reverse-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";normal-move: rectangle -> rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";GIVEN: a rectangle within the canvas"
0 0 24 29 1 #"\n"
0 0 17 3 107
(
 #";RETURNS: a rectangle that follows the given rectangle after the tic"
 #"k, moving a distance in both directions"
) 0 0 24 29 1 #"\n"
0 0 17 3 35 #";         indicated by its velocity"
0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";Example: (normal-move (make-rect-info 35 40 10 10 false) -> (make-r"
 #"ect-info 45 50 10 10 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 64
#";Strategy: using template of rectangle; structural decomposition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"normal-move"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";draw-world: world -> world"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";GIVEN: a world state"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";RETURNS: an image with blue rectangles drawn on the canvas"
0 0 24 29 1 #"\n"
0 0 17 3 103
(
 #";Example: (draw-world (make-world (make-rect-info 30 40 10 10 false)"
 #" (make-rect-info 40 50 15 11 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 57 #";                                 false 300 250) -> image"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";Strategy: using template of rectangle; structural decomposition"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";(define (draw-world w)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 89
(
 #"  (place-image DRAW-RECTANGLE (rect-info-x (world-rect1 w)) (rect-in"
 #"fo-y (world-rect1 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"place-image"
0 0 17 3 91
(
 #" DRAW-RECTANGLE (rect-info-x (world-rect2 w)) (rect-info-y (world-re"
 #"ct2 w)) DRAW-CANVAS))) "
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(begin-for-test"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 10 #"draw-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 35 #" 15 11 false 10 20) false 300 250))"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";                           (place-image DRAW-RECTANGLE 30 40"
0 0 24 29 1 #"\n"
0 0 17 3 99
(
 #";                           (place-image DRAW-RECTANGLE 40 50 DRAW-C"
 #"ANVAS)) \"Inconsistent images\"))"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";draw-rect1-location: world -> image"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";INTERP: Draw the location information inside the rectangle 1 "
0 0 24 29 1 #"\n"
0 0 17 3 21 #";GIVEN: a world state"
0 0 24 29 1 #"\n"
0 0 17 3 107
(
 #";RETURNS: an text image representing the location info of rectangle "
 #"1, located at the center of rectangle 1"
) 0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";Example: (draw-rect1-location (make-world (make-rect-info 50 50 10 "
 #"10 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 104
(
 #";                                          (make-rect-info 100 100 2"
 #"0 20 false) false 200 200)) -> image"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#";Strategy: combining simpler functions; using template of rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";(define (draw-rect1-location w)"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";  (text (string-append \"(\" (number->string (rect-info-vx (world-r"
 #"ect1 w))) \", \""
) 0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";                       (number->string (rect-info-vy (world-rect1 w"
 #"))) \")\")"
) 0 0 24 29 1 #"\n"
0 0 17 3 20 #";        12 \"blue\"))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(begin-for-test"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 19 #"draw-rect1-location"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 35 #" 20 20 false 10 20) false 200 200))"
0 0 24 29 1 #"\n"
0 0 17 3 66
(
 #";                (text (string-append \"(\" (number->string 10) \", "
 #"\""
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";                       (number->string 10) \")\") 12 \"blue\") \"In"
 #"consistent images\"))"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";draw-rect2-location: world -> image"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";INTERP: Draw the location information inside the rectangle 2"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";GIVEN: a world state"
0 0 24 29 1 #"\n"
0 0 17 3 107
(
 #";RETURNS: an text image representing the location info of rectangle "
 #"1, located at the center of rectangle 2"
) 0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";Example: (draw-rect2-location (make-world (make-rect-info 50 50 10 "
 #"10 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 104
(
 #";                                          (make-rect-info 100 100 2"
 #"0 20 false) false 200 200)) -> image"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#";Strategy: combining simpler functions; using template of rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";(define (draw-rect2-location w)"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";  (text (string-append \"(\" (number->string (rect-info-vx (world-r"
 #"ect2 w))) \", \""
) 0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";                       (number->string (rect-info-vy (world-rect2 w"
 #"))) \")\")"
) 0 0 24 29 1 #"\n"
0 0 17 3 20 #";        12 \"blue\"))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(begin-for-test"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 19 #"draw-rect2-location"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 35 #" 20 20 false 10 20) false 200 200))"
0 0 24 29 1 #"\n"
0 0 17 3 66
(
 #";                (text (string-append \"(\" (number->string 20) \", "
 #"\""
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";                       (number->string 20) \")\") 12 \"blue\") \"In"
 #"consistent images\"))"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";draw-unfurnished-world: world -> image  "
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";INTERP: Draw the world with location info printed inside the rectan"
 #"gles"
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #";GIVEN: a world state"
0 0 24 29 1 #"\n"
0 0 17 3 123
(
 #";RETURNS: an image with blue rectangles drawn on the canvas; each re"
 #"ctangle's location info are drawn inside each rectangle"
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";Example: (draw-unfurnished-world (make-world (make-rect-info 150 15"
 #"0 -10 10 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 105
(
 #";                                          (make-rect-info 110 120 2"
 #"0 -20 false) false 200 200)) -> image"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#";Strategy: combining simpler functions; using template of rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";(define (draw-unfurnished-world w)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 11 #"place-image"
0 0 17 3 84
(
 #" (draw-rect1-location w) (rect-info-x (world-rect1 w)) (rect-info-y "
 #"(world-rect1 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"place-image"
0 0 17 3 84
(
 #" (draw-rect2-location w) (rect-info-x (world-rect2 w)) (rect-info-y "
 #"(world-rect2 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 46 #";                            (draw-world w))))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(begin-for-test"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 22 #"draw-unfurnished-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"-10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"110"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 36 #" 20 -20 false 10 20) false 200 200))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 11 #"place-image"
0 0 17 3 2 #" ("
0 0 17 3 19 #"draw-rect1-location"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"-10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"110"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 36 #" 20 -20 false 10 20) false 200 200))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 30 #"                             ("
0 0 17 3 11 #"rect-info-x"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"-10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"110"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 37 #" 20 -20 false 10 20) false 200 200)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 30 #"                             ("
0 0 17 3 11 #"rect-info-y"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"-10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"110"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 37 #" 20 -20 false 10 20) false 200 200)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 30 #"                             ("
0 0 17 3 11 #"place-image"
0 0 17 3 2 #" ("
0 0 17 3 19 #"draw-rect2-location"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"-10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"110"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 36 #" 20 -20 false 10 20) false 200 200))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 43 #"                                          ("
0 0 17 3 11 #"rect-info-x"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"-10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"110"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 37 #" 20 -20 false 10 20) false 200 200)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 43 #"                                          ("
0 0 17 3 11 #"rect-info-y"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"-10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"110"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 37 #" 20 -20 false 10 20) false 200 200)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 43 #"                                          ("
0 0 17 3 10 #"draw-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"-10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"110"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 38 #" 20 -20 false 10 20) false 200 200))))"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";                \"Inconsistent image\"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";draw-rect1-location-r: world -> image"
0 0 24 29 1 #"\n"
0 0 17 3 112
(
 #";INTERP: Draw the location information in red color inside the recta"
 #"ngle 1, located at the center of rectangle 1"
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #";GIVEN: a world state"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";RETURNS: an text image representing the location info of rectangle "
 #"1"
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";Example: (draw-rect1-location-r (make-world (make-rect-info 50 50 1"
 #"0 10 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 104
(
 #";                                          (make-rect-info 100 100 2"
 #"0 20 false) false 200 200)) -> image"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#";Strategy: combining simpler functions; using template of rectangle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 29 #"image-first-rect-location-red"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 2 #"  "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 19 3 4 #"\", \""
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 30 #"image-first-rect-location-blue"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 2 #"  "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 19 3 4 #"\", \""
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(begin-for-test"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 21 #"draw-rect1-location-r"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 35 #" 20 20 false 10 20) false 200 200))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 4 #"text"
0 0 17 3 2 #" ("
0 0 17 3 13 #"string-append"
0 0 17 3 1 #" "
0 0 17 3 3 #"\"(\""
0 0 17 3 2 #" ("
0 0 17 3 14 #"number->string"
0 0 17 3 2 #" ("
0 0 17 3 12 #"rect-info-vx"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 41 #"20 20 false 10 20) false 200 200)))) \", \""
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 38 #"                       (number->string"
0 0 17 3 2 #" ("
0 0 17 3 12 #"rect-info-vy"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 39 #" 20 false 10 20) false 200 200)))) \")\")"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";        12 \"red\")"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";                \"Inconsistent image\"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";draw-rect2-location-r: world -> image"
0 0 24 29 1 #"\n"
0 0 17 3 112
(
 #";INTERP: Draw the location information in red color inside the recta"
 #"ngle 2, located at the center of rectangle 2"
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #";GIVEN: a world state"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";RETURNS: an text image representing the location info of rectangle "
 #"2"
) 0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";Example: (draw-rect1-location (make-world (make-rect-info 50 50 10 "
 #"10 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 104
(
 #";                                          (make-rect-info 100 100 2"
 #"0 20 false) false 200 200)) -> image"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#";Strategy: combining simpler functions; using template of rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";(define (draw-rect2-location-r w)"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";  (text (string-append \"(\" (number->string (rect-info-vx (world-r"
 #"ect2 w))) \", \""
) 0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";                       (number->string (rect-info-vy (world-rect2 w"
 #"))) \")\")"
) 0 0 24 29 1 #"\n"
0 0 17 3 19 #";        12 \"red\"))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(begin-for-test"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 21 #"draw-rect2-location-r"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 35 #" 20 20 false 10 20) false 200 200))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 4 #"text"
0 0 17 3 2 #" ("
0 0 17 3 13 #"string-append"
0 0 17 3 1 #" "
0 0 17 3 3 #"\"(\""
0 0 17 3 2 #" ("
0 0 17 3 14 #"number->string"
0 0 17 3 2 #" ("
0 0 17 3 12 #"rect-info-vx"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 41 #"20 20 false 10 20) false 200 200)))) \", \""
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 24 #"                       ("
0 0 17 3 14 #"number->string"
0 0 17 3 2 #" ("
0 0 17 3 12 #"rect-info-vy"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 39 #" 20 false 10 20) false 200 200)))) \")\")"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";        12 \"red\")"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";                \"Inconsistent image\"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";draw-red-rect: world -> image"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";draw-red-blue-rect: world -> image"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";draw-blue-red-rect: world -> image"
0 0 24 29 1 #"\n"
0 0 17 3 97
(
 #";INTERP: all three functions given a world, draw two rectangles in c"
 #"olor represented by its name:"
) 0 0 24 29 1 #"\n"
0 0 17 3 97
(
 #";        draw-red-rect draws two red rectangles; draw-red-blue-rect "
 #"draws first rectangles as red"
) 0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #";        and second rectangle as blue; draw-blue-red-rect draws firs"
 #"t rectangle as blue and second"
) 0 0 24 29 1 #"\n"
0 0 17 3 25 #";        rectangle as red"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";GIVEN: world state"
0 0 24 29 1 #"\n"
0 0 17 3 103
(
 #";RETURNS: an image with two rectangles in either red or blue color w"
 #"ithin the canvas, located according"
) 0 0 24 29 1 #"\n"
0 0 17 3 35 #";        to their x and y positions"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";Example: (draw-red-rect (make-world (make-rect-info 150 120 10 20 f"
 #"alse)"
) 0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #";                                    (make-rect-info 150 120 10 20 f"
 #"alse) 200 250 false)) -> image"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#";Strategy: combining simpler functions; using template of rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";(define (draw-red-rect w)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 93
(
 #"  (place-image DRAW-RED-RECTANGLE (rect-info-x (world-rect1 w)) (rec"
 #"t-info-y (world-rect1 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"place-image"
0 0 17 3 94
(
 #" DRAW-RED-RECTANGLE (rect-info-x (world-rect2 w)) (rect-info-y (worl"
 #"d-rect2 w)) DRAW-CANVAS)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";(define (draw-red-blue-rect w)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 93
(
 #"  (place-image DRAW-RED-RECTANGLE (rect-info-x (world-rect1 w)) (rec"
 #"t-info-y (world-rect1 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"place-image"
0 0 17 3 90
(
 #" DRAW-RECTANGLE (rect-info-x (world-rect2 w)) (rect-info-y (world-re"
 #"ct2 w)) DRAW-CANVAS)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";(define (draw-blue-red-rect w)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 89
(
 #"  (place-image DRAW-RECTANGLE (rect-info-x (world-rect1 w)) (rect-in"
 #"fo-y (world-rect1 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"place-image"
0 0 17 3 94
(
 #" DRAW-RED-RECTANGLE (rect-info-x (world-rect2 w)) (rect-info-y (worl"
 #"d-rect2 w)) DRAW-CANVAS)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(begin-for-test"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 13 #"draw-red-rect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 35 #" 10 20 false 10 20) 200 250 false))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 11 #"place-image"
0 0 17 3 1 #" "
0 0 17 3 18 #"DRAW-RED-RECTANGLE"
0 0 17 3 2 #" ("
0 0 17 3 11 #"rect-info-x"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 36 #" 10 20 false 10 20) 200 250 false)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 30 #"                             ("
0 0 17 3 11 #"rect-info-y"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 46 #" 20 false 10 20) 200 250 false))) DRAW-CANVAS)"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";                \"inconsistent image\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 18 #"draw-red-blue-rect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 35 #" 10 20 false 10 20) 200 250 false))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 11 #"place-image"
0 0 17 3 1 #" "
0 0 17 3 18 #"DRAW-RED-RECTANGLE"
0 0 17 3 2 #" ("
0 0 17 3 11 #"rect-info-x"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"250"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 5 #"))) ("
0 0 17 3 11 #"rect-info-y"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 36 #" 10 20 false 10 20) 200 250 false)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"place-image"
0 0 17 3 1 #" "
0 0 17 3 14 #"DRAW-RECTANGLE"
0 0 17 3 2 #" ("
0 0 17 3 11 #"rect-info-x"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"250"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 5 #"))) ("
0 0 17 3 11 #"rect-info-y"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 47 #" 20 false 10 20) 200 250 false))) DRAW-CANVAS))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";                \"inconsistent image\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 18 #"draw-blue-red-rect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 35 #" 10 20 false 10 20) 200 250 false))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 11 #"place-image"
0 0 17 3 1 #" "
0 0 17 3 14 #"DRAW-RECTANGLE"
0 0 17 3 2 #" ("
0 0 17 3 11 #"rect-info-x"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"250"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 5 #"))) ("
0 0 17 3 11 #"rect-info-y"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 36 #" 10 20 false 10 20) 200 250 false)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"place-image"
0 0 17 3 1 #" "
0 0 17 3 18 #"DRAW-RED-RECTANGLE"
0 0 17 3 2 #" ("
0 0 17 3 11 #"rect-info-x"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"250"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 5 #"))) ("
0 0 17 3 11 #"rect-info-y"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 47 #" 20 false 10 20) 200 250 false))) DRAW-CANVAS))"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";              \"inconsistent image\"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";draw-red-world: world -> image"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";draw-red-blue-world: world -> image"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";draw-blue-red-world: world -> image"
0 0 24 29 1 #"\n"
0 0 17 3 99
(
 #";INTERP: all three functions draw location information with correspo"
 #"nding colors inside rectangles,"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #";        which are also drawn on the canvas"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";GIVEN: world state"
0 0 24 29 1 #"\n"
0 0 17 3 110
(
 #";RETURNS: image containing elements including location info (with co"
 #"lor), rectangles (with color), and canvas."
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";Exmaple: (draw-red-world (make-world (make-rect-info 120 200 30 -15"
 #" false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";                                     (make-rect-info 130 190 30 -15"
 #" false) 130 190 false)) -> image"
) 0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";Strategy: combining simpler functions; using template of world and "
 #"rectangle;"
) 0 0 24 29 1 #"\n"
0 0 17 3 27 #";(define (draw-red-world w)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 11 #"place-image"
0 0 17 3 2 #" ("
0 0 17 3 29 #"image-first-rect-location-red"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rects"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 79
(
 #"))) (rect-info-x (first (world-rects w))) (rect-info-y (first (world"
 #"-rects w)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"place-image"
0 0 17 3 86
(
 #" (draw-rect2-location-r w) (rect-info-x (world-rect2 w)) (rect-info-"
 #"y (world-rect2 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 49 #";                            (draw-red-rect w))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"draw-single-red-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 18 #"DRAW-RED-RECTANGLE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 11 #"DRAW-CANVAS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"draw-single-blue-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 14 #"DRAW-RECTANGLE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 11 #"DRAW-CANVAS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 26 #"draw-rect-and-location-red"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 29 #"image-first-rect-location-red"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 18 #"DRAW-RED-RECTANGLE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 11 #"DRAW-CANVAS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 16 #";;recursive draw"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"recursive-draw-world"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 11 #"if-selected"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 29 #"image-first-rect-location-red"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 20 #"draw-single-red-rect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 11 #"if-selected"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 30 #"image-first-rect-location-blue"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 21 #"draw-single-blue-rect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 8 #")))]    "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 11 #"if-selected"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 29 #"image-first-rect-location-red"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 18 #"DRAW-RED-RECTANGLE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 20 #"recursive-draw-world"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 11 #"if-selected"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 30 #"image-first-rect-location-blue"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 14 #"DRAW-RECTANGLE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 20 #"recursive-draw-world"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 6 #"))))] "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 11 #"DRAW-CANVAS"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";(define (draw-red-blue-world w)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 11 #"place-image"
0 0 17 3 86
(
 #" (draw-rect1-location-r w) (rect-info-x (world-rect1 w)) (rect-info-"
 #"y (world-rect1 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"place-image"
0 0 17 3 84
(
 #" (draw-rect2-location w) (rect-info-x (world-rect2 w)) (rect-info-y "
 #"(world-rect2 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 54 #";                            (draw-red-blue-rect w))))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";(define (draw-blue-red-world w)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 11 #"place-image"
0 0 17 3 84
(
 #" (draw-rect1-location w) (rect-info-x (world-rect1 w)) (rect-info-y "
 #"(world-rect1 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"place-image"
0 0 17 3 86
(
 #" (draw-rect2-location-r w) (rect-info-x (world-rect2 w)) (rect-info-"
 #"y (world-rect2 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 54 #";                            (draw-blue-red-rect w))))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(begin-for-test"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 14 #"draw-red-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 36 #" 30 -15 false 10 20) 130 190 false))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 11 #"place-image"
0 0 17 3 2 #" ("
0 0 17 3 21 #"draw-rect1-location-r"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 4 #")) ("
0 0 17 3 11 #"rect-info-x"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 5 #"))) ("
0 0 17 3 11 #"rect-info-y"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 37 #" 30 -15 false 10 20) 130 190 false)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 30 #"                             ("
0 0 17 3 11 #"place-image"
0 0 17 3 2 #" ("
0 0 17 3 21 #"draw-rect2-location-r"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 4 #")) ("
0 0 17 3 11 #"rect-info-x"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 5 #"))) ("
0 0 17 3 11 #"rect-info-y"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 37 #" 30 -15 false 10 20) 130 190 false)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 43 #"                                          ("
0 0 17 3 13 #"draw-red-rect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 38 #" 30 -15 false 10 20) 130 190 false))))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";                \"Inconsistent image\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 19 #"draw-red-blue-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 36 #" 30 -15 false 10 20) 130 190 false))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 11 #"place-image"
0 0 17 3 2 #" ("
0 0 17 3 21 #"draw-rect1-location-r"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 4 #")) ("
0 0 17 3 11 #"rect-info-x"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 5 #"))) ("
0 0 17 3 11 #"rect-info-y"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 37 #" 30 -15 false 10 20) 130 190 false)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"place-image"
0 0 17 3 2 #" ("
0 0 17 3 19 #"draw-rect2-location"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 4 #")) ("
0 0 17 3 11 #"rect-info-x"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 5 #"))) ("
0 0 17 3 11 #"rect-info-y"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 37 #" 30 -15 false 10 20) 130 190 false)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 29 #"                            ("
0 0 17 3 18 #"draw-red-blue-rect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 38 #" 30 -15 false 10 20) 130 190 false))))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";                \"Inconsistent image\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 19 #"draw-blue-red-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 36 #" 30 -15 false 10 20) 130 190 false))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 11 #"place-image"
0 0 17 3 2 #" ("
0 0 17 3 19 #"draw-rect1-location"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 4 #")) ("
0 0 17 3 11 #"rect-info-x"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 5 #"))) ("
0 0 17 3 11 #"rect-info-y"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 37 #" 30 -15 false 10 20) 130 190 false)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"place-image"
0 0 17 3 2 #" ("
0 0 17 3 21 #"draw-rect2-location-r"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 4 #")) ("
0 0 17 3 11 #"rect-info-x"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 5 #"))) ("
0 0 17 3 11 #"rect-info-y"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 37 #" 30 -15 false 10 20) 130 190 false)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 29 #"                            ("
0 0 17 3 18 #"draw-blue-red-rect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 3 #"-15"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"190"
0 0 17 3 38 #" 30 -15 false 10 20) 130 190 false))))"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";                \"Inconsistent image\"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 41 #";draw-cursor-on-red-world: world -> image"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";draw-cursor-on-red-blue-world: world -> image"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";draw-cursor-on-blue-red-world: world -> image"
0 0 24 29 1 #"\n"
0 0 17 3 102
(
 #";INTERP: all three functions draw a red circle inside the rectangle("
 #"s) that has been selected by mouse"
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #";GIVEN: a world state"
0 0 24 29 1 #"\n"
0 0 17 3 103
(
 #";RETURN: an image in which a red circle has been drawn inside rectan"
 #"gle(s) which is drawn on the canvas"
) 0 0 24 29 1 #"\n"
0 0 17 3 119
(
 #";Example: (draw-cursor-on-red-world (make-world (make-rect-info 200 "
 #"230 19 18 true) (make-rect-info 40 230 19 20 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";                                               false 200 220)) -> i"
 #"mage"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
#";Strategy: combining simpler functions; using template of world"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"draw-cursor-on-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-mousex"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-mousey"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 20 #"recursive-draw-world"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rects"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";(define (draw-cursor-on-red-blue-world w)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 11 #"place-image"
0 0 17 3 61
#" (circle 5 \"outline\" \"red\") (world-mousex w) (world-mousey w)"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";               (draw-red-blue-world w)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";(define (draw-cursor-on-blue-red-world w)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 11 #"place-image"
0 0 17 3 61
#" (circle 5 \"outline\" \"red\") (world-mousex w) (world-mousey w)"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";               (draw-blue-red-world w)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(begin-for-test"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 24 #"draw-cursor-on-red-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 35 #" 19 20 false 10 20) false 200 220))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"place-image"
0 0 17 3 2 #" ("
0 0 17 3 6 #"circle"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 9 #"\"outline\""
0 0 17 3 1 #" "
0 0 17 3 5 #"\"red\""
0 0 17 3 3 #") ("
0 0 17 3 12 #"world-mousex"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"220"
0 0 17 3 4 #")) ("
0 0 17 3 12 #"world-mousey"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 35 #" 19 20 false 10 20) false 200 220))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 29 #"                            ("
0 0 17 3 14 #"draw-red-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 36 #" 19 20 false 10 20) false 200 220)))"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";               \"Inconsistent image\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 29 #"draw-cursor-on-red-blue-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 35 #" 19 20 false 10 20) false 200 220))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"place-image"
0 0 17 3 2 #" ("
0 0 17 3 6 #"circle"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 9 #"\"outline\""
0 0 17 3 1 #" "
0 0 17 3 5 #"\"red\""
0 0 17 3 3 #") ("
0 0 17 3 12 #"world-mousex"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"220"
0 0 17 3 4 #")) ("
0 0 17 3 12 #"world-mousey"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 35 #" 19 20 false 10 20) false 200 220))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 29 #"                            ("
0 0 17 3 19 #"draw-red-blue-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 36 #" 19 20 false 10 20) false 200 220)))"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";               \"Inconsistent image\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 29 #"draw-cursor-on-blue-red-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 35 #" 19 20 false 10 20) false 200 220))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"place-image"
0 0 17 3 2 #" ("
0 0 17 3 6 #"circle"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 9 #"\"outline\""
0 0 17 3 1 #" "
0 0 17 3 5 #"\"red\""
0 0 17 3 3 #") ("
0 0 17 3 12 #"world-mousex"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 2 #") "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"220"
0 0 17 3 4 #")) ("
0 0 17 3 12 #"world-mousey"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 35 #" 19 20 false 10 20) false 200 220))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 29 #"                            ("
0 0 17 3 19 #"draw-blue-red-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 36 #" 19 20 false 10 20) false 200 220)))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";               \"Inconsistent image\"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";draw-real-world: World -> image"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";GIVEN: world state"
0 0 24 29 1 #"\n"
0 0 17 3 107
(
 #";RETURNS: an image containing every object inside, including red cir"
 #"cle, rectangles, location info, canvas."
) 0 0 24 29 1 #"\n"
0 0 17 3 110
(
 #";Example: (draw-real-world (make-world (make-rect-info 200 230 19 18"
 #" true) (make-rect-info 40 230 19 20 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";                                               false 200 220)) -> i"
 #"mage"
) 0 0 24 29 1 #"\n"
0 0 17 3 59
#";Strategy: dividing into cases; combining simpler functions"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"draw-real-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 15 #"if-one-selected"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rects"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 20 #"draw-cursor-on-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 20 #"recursive-draw-world"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rects"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;if-one-selected"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"if-one-selected"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 11 #"if-selected"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"if-one-selected"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(begin-for-test"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 15 #"draw-real-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 34 #" 19 20 true 10 20) false 200 220))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 24 #"draw-cursor-on-red-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 34 #" 19 20 true 10 20) false 200 220))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";                \"inconsistent image\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 15 #"draw-real-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 35 #" 19 20 false 10 20) false 200 220))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 29 #"draw-cursor-on-red-blue-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 35 #" 19 20 false 10 20) false 200 220))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";                \"inconsistent image\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 15 #"draw-real-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 34 #" 19 20 true 10 20) false 200 220))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 29 #"draw-cursor-on-blue-red-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 34 #" 19 20 true 10 20) false 200 220))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";                \"inconsistent image\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 15 #"draw-real-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 35 #" 19 20 false 10 20) false 200 220))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 22 #"draw-unfurnished-world"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 1 #" "
0 0 17 3 2 #"19"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 3 #"230"
0 0 17 3 35 #" 19 20 false 10 20) false 200 220))"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";                \"inconsistent image\"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; world-after-key-event : WorldState KeyEvent -> WorldState"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; GIVEN: a world state"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; RETURNS: the WorldState that should follow the given worldstate"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; after the given keyevent"
0 0 24 29 1 #"\n"
0 0 17 3 116
(
 #";; Example: (world-after-key-event (make-world (make-rect-info 100 2"
 #"00 1 2 false) (make-rect-info 105 201 2 3 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 152
(
 #";                                               false 50 100) \" \")"
 #") -> (make-world (make-rect-info 100 200 1 2 false) (make-rect-info "
 #"105 201 2 3 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #";                                                                   "
 #"          true 50 100)"
) 0 0 24 29 1 #"\n"
0 0 17 3 56 #";  Strategy: dividing into cases; usng template of world"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 14 3 5 #"PAUSE"
0 0 24 3 3 #") ("
0 0 14 3 12 #"toggle-pause"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"n\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"add-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 12 #"if-speed-key"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 3 #") ("
0 0 14 3 9 #"add-speed"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(begin-for-test"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 21 #"world-after-key-event"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"105"
0 0 17 3 1 #" "
0 0 17 3 3 #"201"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 33 #"3 false 10 20) false 50 100) \" \")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"105"
0 0 17 3 1 #" "
0 0 17 3 3 #"201"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 41 #"10 20) true 50 100) \"world should pause\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 21 #"world-after-key-event"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"105"
0 0 17 3 1 #" "
0 0 17 3 3 #"201"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 33 #"3 false 10 20) false 50 100) \"a\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 3 #"105"
0 0 17 3 1 #" "
0 0 17 3 3 #"201"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 43 #"10 20) false 50 100) \"world should pause\"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; toggle-pause"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"toggle-pause"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rects"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"world-mousex"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-mousey"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;if-speed-key"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"if-speed-key"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 3 #") ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;add-rect"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 18 #"add-rect-into-list"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rects"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"world-mousex"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-mousey"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;add-rect-into-list"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"add-rect-into-list"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"rects"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;add-speed"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"add-speed"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 13 #"iterate-rects"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rects"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 2 #"ke"
0 0 24 3 3 #") ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-mousex"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-mousey"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;iterate-rects"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"iterate-rects"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 14 3 5 #"rects"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"speed-up-rect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 14 3 2 #"ke"
0 0 24 3 3 #") ("
0 0 14 3 13 #"iterate-rects"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 14 3 2 #"ke"
0 0 24 3 6 #"))] ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;speed-up-rect"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"speed-up-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 3 #") ("
0 0 14 3 12 #"add-speed-up"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 3 #") ("
0 0 14 3 14 #"add-speed-down"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 14 #"add-speed-left"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"add-speed-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; world-rect1 : WorldState -> Rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; world-rect2 : WorldState -> Rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; world-paused? : WorldState -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; RETURNS: the specified attribute of the WorldState"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; NOTE: if these are part of the world struct, you don't need to"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; write any deliverables for these functions."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; provided by default define-struct"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; rect-x : Rectangle -> NonNegInt"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; rect-y : Rectangle -> NonNegInt"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; rect-vx : Rectangle -> Int"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; rect-vy : Rectangle -> Int"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; RETURNS: the coordinates of the center of the rectangle and its"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; velocity in the x- and y- directions."
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; Example: (rect-x (make-rect-info 100 200 10 20 false)) -> 100"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; Strategy: using template of rectangle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rect-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rect-y"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"rect-vx"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"rect-vy"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rect-x"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")) "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rect-y"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")) "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"rect-vx"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")) "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"rect-vy"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")) "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; world-after-mouse-event: WorldState Int Int MouseEvent -> WorldSt"
 #"ate"
) 0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; GIVEN: A World, the x- and y-coordinates of a mouse event, and th"
 #"e"
) 0 0 24 29 1 #"\n"
0 0 17 3 14 #";; mouse event"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; RETURNS: the world that should follow the given world after the g"
 #"iven mouse"
) 0 0 24 29 1 #"\n"
0 0 17 3 9 #";; event."
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; Example: (world-after-mouse-event (make-world (make-rect-info 25 "
 #"20 -3 3 true)"
) 0 0 24 29 1 #"\n"
0 0 17 3 116
(
 #";                                                (make-rect-info 10 "
 #"10 -5 -1 false) 10 20 false) 30 30 \"button-up\"))"
) 0 0 24 29 1 #"\n"
0 0 17 3 59
#";          -> (make-world (make-rect-info 25 20 -3 3 false)"
0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #";                                                (make-rect-info 10 "
 #"10 -5 -1 false) 30 30 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #";  Strategy: dividing into cases; using template of world; combining"
 #" simpler functions"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"mouse=?"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"button-up\""
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 3 #") ("
0 0 14 3 8 #"mouse-up"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"mouse=?"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"button-down\""
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 3 #") ("
0 0 14 3 10 #"mouse-down"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"mouse=?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 3 #") ("
0 0 14 3 10 #"mouse-drag"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(begin-for-test"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 23 #"world-after-mouse-event"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 2 #"-3"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"-5"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 38 #"10 20) false 10 20) 30 30 \"button-up\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 8 #"mouse-up"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 2 #"-3"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"-5"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 34 #" false 10 20) false 10 20) 30 30))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 23 #"world-after-mouse-event"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 2 #"-3"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"-5"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 40 #"10 20) false 10 20) 30 30 \"button-down\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 10 #"mouse-down"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 2 #"-3"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"-5"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 34 #" false 10 20) false 10 20) 30 30))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 23 #"world-after-mouse-event"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 2 #"-3"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"-5"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 33 #"10 20) false 10 20) 30 30 \"drag\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 10 #"mouse-drag"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 2 #"-3"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"-5"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 34 #" false 10 20) false 10 20) 30 30))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 23 #"world-after-mouse-event"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 2 #"-3"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"-5"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 34 #"10 20) false 10 20) 30 30 \"enter\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 2 #"-3"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 3 #") ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 33 #" -5 -1 false 10 20) false 10 20))"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";  )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 44 #";mouse-up: World NonNegInt NonNegInt-> World"
0 0 24 29 1 #"\n"
0 0 17 3 130
(
 #";INTERP: given a world and mouse position, this function returns a w"
 #"orld in which the rectangles' attributes are updated according"
) 0 0 24 29 1 #"\n"
0 0 17 3 68
(
 #";        to the mouse event, in this case the \"button down\" scenar"
 #"io"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#";GIVEN: a world state, x coordinate of mouse, y coordinate of mouse"
0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #";RETURNS: a world state that follows the given one, with mouse posit"
 #"ions updated and rectangle's"
) 0 0 24 29 1 #"\n"
0 0 17 3 28 #";         attributes updated"
0 0 24 29 1 #"\n"
0 0 17 3 105
(
 #";Example: (mouse-up (make-world (make-rect-info 100 200 10 20 false)"
 #" (make-rect-info 100 200 10 20 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 144
(
 #";                               200 250 false) 200 300) -> (make-wor"
 #"ld (make-rect-info 100 200 10 20 false) (make-rect-info 100 200 10 2"
 #"0 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 46 #";                               200 250 false)"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";Strategy: dividing into cases; using template of world; combining s"
 #"impler functions"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"mouse-up"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 24 #"unselect-rects-recursive"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rects"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"empty?"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rects"
0 0 17 3 66
#" w)) (make-world (world-rects world) (world-paused? world) mx my)]"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";    [(if-both-selected (world-rect1 world) (world-rect1 world))"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";     (make-world (uncheck-rect (world-rect1 world)) (uncheck-rect ("
 #"world-rect2 world))"
) 0 0 24 29 1 #"\n"
0 0 17 3 47 #";                 (world-paused? world) mx my)]"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";    [(if-selected (world-rect1 world))"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";     (make-world (uncheck-rect (world-rect1 world)) (world-rect2 wo"
 #"rld)"
) 0 0 24 29 1 #"\n"
0 0 17 3 47 #";                 (world-paused? world) mx my)]"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";    [(if-selected (world-rect2 world))"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";     (make-world (world-rect1 world) (uncheck-rect (world-rect2 wor"
 #"ld))"
) 0 0 24 29 1 #"\n"
0 0 17 3 47 #";                 (world-paused? world) mx my)]"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";    [else (make-world (world-rect1 world) (world-rect2 world)"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";                 (world-paused? world) mx my)]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;select-rects-recursive"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 24 #"unselect-rects-recursive"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 14 3 5 #"rects"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 12 #"uncheck-rect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 4 #")) ("
0 0 14 3 24 #"unselect-rects-recursive"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7        2857 4           0 0           0 475 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"mouse-up"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 2 #") "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"mouse-up"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 2 #") "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 12 #"uncheck-rect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"mouse-up"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 2 #") "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"mouse-up"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 2 #") "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"mouse-up"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 2 #") "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 12 #"uncheck-rect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";mouse-down: World NonNegInt NonNegInt-> World"
0 0 24 29 1 #"\n"
0 0 17 3 130
(
 #";INTERP: given a world and mouse position, this function returns a w"
 #"orld in which the rectangles' attributes are updated according"
) 0 0 24 29 1 #"\n"
0 0 17 3 68
(
 #";        to the mouse event, in this case the \"button down\" scenar"
 #"io"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#";GIVEN: a world state, x coordinate of mouse, y coordinate of mouse"
0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #";RETURNS: a world state that follows the given one, with mouse posit"
 #"ions updated and rectangle's"
) 0 0 24 29 1 #"\n"
0 0 17 3 28 #";         attributes updated"
0 0 24 29 1 #"\n"
0 0 17 3 107
(
 #";Example: (mouse-down (make-world (make-rect-info 100 200 10 20 fals"
 #"e) (make-rect-info 100 200 10 20 false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 143
(
 #";                               200 250 false) 100 210) -> (make-wor"
 #"ld (make-rect-info 100 200 10 20 true) (make-rect-info 100 200 10 20"
 #" false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";                               100 210 true)"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";Strategy: dividing into cases; using template of world; combining s"
 #"impler functions"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"mouse-down"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 22 #"select-rects-recursive"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rects"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";    [(if-inside-both (world-rect1 world) (world-rect2 world) mx my)"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";                     (select-both world mx my)]"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 6 #"    [("
0 0 17 3 9 #"if-inside"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 43 #" world) mx my) (select-rect-1 world mx my)]"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 6 #"    [("
0 0 17 3 9 #"if-inside"
0 0 17 3 56 #" (world-rect2 world) mx my) (select-rect-2 world mx my)]"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";    [else world]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";select-rects-recursive"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"select-rects-recursive"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 14 3 5 #"rects"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"if-inside"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"case-down"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 3 #") ("
0 0 14 3 22 #"select-rects-recursive"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 3 #") ("
0 0 14 3 22 #"select-rects-recursive"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"select-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 19 #"update-relative-pos"
0 0 24 3 2 #" ("
0 0 14 3 10 #"check-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 7        2239 4           0 0           0 372 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"mouse-down"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"210"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"210"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"mouse-down"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"mouse-down"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"mouse-down"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 21 3 3 #"130"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 21 3 3 #"130"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 3 #")))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";mouse-drag: World NonNegInt NonNegInt-> World"
0 0 24 29 1 #"\n"
0 0 17 3 130
(
 #";INTERP: given a world and mouse position, this function returns a w"
 #"orld in which the rectangles' attributes are updated according"
) 0 0 24 29 1 #"\n"
0 0 17 3 61
#";        to the mouse event, in this case the \"drag\" scenario"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";GIVEN: a world state, x coordinate of mouse, y coordinate of mouse"
0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #";RETURNS: a world state that follows the given one, with mouse posit"
 #"ions updated and rectangle's"
) 0 0 24 29 1 #"\n"
0 0 17 3 28 #";         attributes updated"
0 0 24 29 1 #"\n"
0 0 17 3 103
(
 #";Example: (mouse-up (make-world (make-rect-info 100 200 10 20 true) "
 #"(make-rect-info 100 200 10 20 true)"
) 0 0 24 29 1 #"\n"
0 0 17 3 142
(
 #";                               190 200 false) 100 210) -> (make-wor"
 #"ld (make-rect-info 110 210 10 20 true) (make-rect-info 110 210 10 20"
 #" true)"
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";                               100 210 true)"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";Strategy: dividing into cases; using template of world; combining s"
 #"impler functions"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"mouse-drag"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 20 #"mouse-drag-recursive"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rects"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 3 #") ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 6 #"    [("
0 0 17 3 16 #"if-both-selected"
0 0 17 3 54 #" (world-rect1 w) (world-rect2 w)) (drag-both w mx my)]"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";    [(if-selected (world-rect1 w)) (drag-one w mx my)]"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";    [(if-selected (world-rect2 w)) (drag-two w mx my)]"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";    [else w]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"mouse-drag-recursive"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 14 3 5 #"rects"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"case-drag"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 3 #") ("
0 0 14 3 20 #"mouse-drag-recursive"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"rects"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 30 #";  (define (drag-rect r mx my)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 5 #"    ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 5 #"move-"
0 0 17 3 1 #"r"
0 0 17 3 3 #"ect"
0 0 17 3 1 #"-"
0 0 17 3 3 #"one"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 49 #" mx my) (world-rect2 w) (world-paused? w) mx my))"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 24 29 1 #"\n"
0 0 17 3 34 #";  (define (move-rect-one w mx my)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 58
#" (+ (rect-info-x (world-rect1 w)) (- mx (world-mousex w)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 75
(
 #"                  (+ (rect-info-y (world-rect1 w)) (- my (world-mous"
 #"ey w)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";                  (rect-info-vx (world-rect1 w)) (rect-info-vy (wor"
 #"ld-rect1 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";                  (rect-info-selected? (world-rect1 w)) (rect-info-"
 #"rx (world-rect1 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 51 #";                  (rect-info-ry (world-rect1 w))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7        2341 4           0 0           0 389 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"mouse-drag"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"210"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"drag-both"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"210"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"mouse-drag"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 8 #"drag-one"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"mouse-drag"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 8 #"drag-two"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"mouse-drag"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 21 3 3 #"130"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 21 3 3 #"130"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0           0 0 0 24 29 1 #"\n"
0 0 17 3 47 #";drag-both: World NonNegInt NonNegInt -> world "
0 0 24 29 1 #"\n"
0 0 17 3 46 #";drag-one: World NonNegInt NonNegInt -> world "
0 0 24 29 1 #"\n"
0 0 17 3 45 #";drag-two: World NonNegInt NonNegInt -> world"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";GIVEN: a world state and position of mouse"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";RETURNS: a world state in which the rectangles' positions are updat"
 #"ed according to mouse's movement"
) 0 0 24 29 1 #"\n"
0 0 17 3 104
(
 #";Example: (drag-both (make-world (make-rect-info 100 200 10 20 true)"
 #" (make-rect-info 100 200 10 20 true)"
) 0 0 24 29 1 #"\n"
0 0 17 3 55 #";                               190 200 false) 100 210)"
0 0 24 29 1 #"\n"
0 0 17 3 97
(
 #";          -> (make-world (make-rect-info 110 210 10 20 true) (make-"
 #"rect-info 110 210 10 20 true)"
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";                               100 210 true)"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";Strategy: combining simpler functions; using template of world"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";(define (drag-both w mx my)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 13 #"move-rect-one"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 2 #"mx"
0 0 17 3 1 #" "
0 0 17 3 2 #"my"
0 0 17 3 51 #") (move-rect-two w mx my) (world-paused? w) mx my))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";(define (drag-one w mx my)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 13 #"move-rect-one"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 49 #" mx my) (world-rect2 w) (world-paused? w) mx my))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";(define (drag-two w mx my)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 10 #"make-world"
0 0 17 3 2 #" ("
0 0 17 3 11 #"world-rect1"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 51 #") (move-rect-two w mx my) (world-paused? w) mx my))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";move-rect-one: World NonNegInt NonNegInt -> World"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";move-rect-two: World NonNegInt NonNegInt -> World"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";GIVEN: a world state, x coordinate of mouse, y coordinate of mouse"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";RETURNS:a rectangle withs its coordinate updated according to the m"
 #"ouse movement"
) 0 0 24 29 1 #"\n"
0 0 17 3 108
(
 #";Example: (move-rect-one (make-world (make-rect-info 100 200 10 20 t"
 #"rue) (make-rect-info 100 200 10 20 true)"
) 0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";                               190 200 false) 100 210) -> (make-rec"
 #"t-info 110 210 10 20 true)"
) 0 0 24 29 1 #"\n"
0 0 17 3 48 #";Strategy: using template of world and rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";(define (move-rect-one w mx my)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 58
#" (+ (rect-info-x (world-rect1 w)) (- mx (world-mousex w)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 75
(
 #"                  (+ (rect-info-y (world-rect1 w)) (- my (world-mous"
 #"ey w)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";                  (rect-info-vx (world-rect1 w)) (rect-info-vy (wor"
 #"ld-rect1 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";                  (rect-info-selected? (world-rect1 w)) (rect-info-"
 #"rx (world-rect1 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 51 #";                  (rect-info-ry (world-rect1 w))))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";(define (move-rect-two w mx my)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 14 #"make-rect-info"
0 0 17 3 58
#" (+ (rect-info-x (world-rect2 w)) (- mx (world-mousex w)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 75
(
 #"                  (+ (rect-info-y (world-rect2 w)) (- my (world-mous"
 #"ey w)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";                  (rect-info-vx (world-rect2 w)) (rect-info-vy (wor"
 #"ld-rect2 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";                  (rect-info-selected? (world-rect2 w)) (rect-info-"
 #"rx (world-rect2 w))"
) 0 0 24 29 1 #"\n"
0 0 17 3 51 #";                  (rect-info-ry (world-rect2 w))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";if-inside: rectangle NonNegInt NonNegInt -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";if-inside-both: rectangle NonNegInt NonNegInt -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";GIVEN: rectangle, x coordinate of mouse, y coordinate of mouse"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";RETURNS: boolean value representing if mouse is positioned inside r"
 #"ectangle(s)"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";Example: (if-inside (make-rect-info 100 200 10 10 false) 110 220) -"
 #"> true"
) 0 0 24 29 1 #"\n"
0 0 17 3 38 #";Strategy: using template of rectangle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"if-inside"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 6 #"mousex"
0 0 24 3 1 #" "
0 0 14 3 6 #"mousey"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 6 #"mousex"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 10 #"HALF-WIDTH"
0 0 24 3 4 #")) ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 6 #"mousex"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 10 #"HALF-WIDTH"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 6 #"mousey"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 8 #"HALF-LEN"
0 0 24 3 4 #")) ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 6 #"mousey"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 8 #"HALF-LEN"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"if-inside-both"
0 0 24 3 1 #" "
0 0 14 3 2 #"r1"
0 0 24 3 1 #" "
0 0 14 3 2 #"r2"
0 0 24 3 1 #" "
0 0 14 3 6 #"mousex"
0 0 24 3 1 #" "
0 0 14 3 6 #"mousey"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 9 #"if-inside"
0 0 24 3 1 #" "
0 0 14 3 2 #"r1"
0 0 24 3 1 #" "
0 0 14 3 6 #"mousex"
0 0 24 3 1 #" "
0 0 14 3 6 #"mousey"
0 0 24 3 3 #") ("
0 0 14 3 9 #"if-inside"
0 0 24 3 1 #" "
0 0 14 3 2 #"r2"
0 0 24 3 1 #" "
0 0 14 3 6 #"mousex"
0 0 24 3 1 #" "
0 0 14 3 6 #"mousey"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";select-both: World NonNegInt NonNegInt -> World"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";select-rect-1 World NonNegInt NonNegInt -> World"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";select-rect-2 World NonNegInt NonNegInt -> World"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";GIVEN: world state, x coordinate of mouse, y coordinate of mouse"
0 0 24 29 1 #"\n"
0 0 17 3 99
(
 #";RETURNS: a World that follows the given one, with rectangle(s) sele"
 #"cted and mouse position updated"
) 0 0 24 29 1 #"\n"
0 0 17 3 109
(
 #";Example: (select-rect-1 (make-world (make-rect-info 100 200 10 20 f"
 #"alse) (make-rect-info 100 200 10 20 true)"
) 0 0 24 29 1 #"\n"
0 0 17 3 62
#";                               190 200 false) 10 21) 110 220)"
0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #";         -> (make-world (make-rect-info 100 200 10 20 true) (make-r"
 #"ect-info 100 200 10 20 true)"
) 0 0 24 29 1 #"\n"
0 0 17 3 62
#";                               190 200 false) 10 21) 110 220)"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";Strategy: combining simpler functions; using template of world"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";(define (select-both w mx my)"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";  (make-world (update-relative-pos (check-rect (world-rect1 w)) mx "
 #"my)"
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";              (update-relative-pos (check-rect (world-rect2 w)) mx "
 #"my)"
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #";              (world-paused? w) mx my))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";(define (select-rect-1 w mx my)"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";  (make-world (update-relative-pos (check-rect (world-rect1 w)) mx "
 #"my)"
) 0 0 24 29 1 #"\n"
0 0 17 3 56 #";              (world-rect2 w) (world-paused? w) mx my))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";(define (select-rect-2 w mx my)"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";  (make-world (world-rect1 w)"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";              (update-relative-pos (check-rect (world-rect2 w)) mx "
 #"my)"
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #";              (world-paused? w) mx my))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 64
#";update-relative-pos: rect-info NonNegInt NonNegInt -> rect-info"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 65
#";GIVEN: a rectangle, x-coordinate of mouse, y-coordinate of mouse"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 67
#";RETURNS: a new rectangle in which the relative position is updated"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 88
(
 #";Example: (update-relative-position (make-rect-info 100 200 10 20 fa"
 #"lse 50 -30) 300 250)"
) 0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 56 #";         -> (make-rect-info 100 200 10 20 false 100 50)"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 38 #";Strategy: using template of rectangle"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"update-relative-pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 2 #") "
0 0 14 3 2 #"my"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 49 #";if-both-selected: rectangle rectangle -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";if-selected: rectangle -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";GIVEN: one or two rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";RETURNS: a boolean representing if one or both rectangles are selec"
 #"ted"
) 0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";Example: (if-both-selected (make-rect-info 100 200 1 2 true) -> tru"
 #"e"
) 0 0 24 29 1 #"\n"
0 0 17 3 38 #";Strategy: using template of rectangle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"if-both-selected"
0 0 24 3 1 #" "
0 0 14 3 2 #"r1"
0 0 24 3 1 #" "
0 0 14 3 2 #"r2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 2 #"r1"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 2 #"r2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"if-selected"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";check-rect: rectangle -> rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";uncheck-rect: rectangle -> rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";GIVEN: a rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";RETURNS: a same rectangle with selected? checked or unchecked"
0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #";Example: (check-rect (make-rect-info 100 200 1 2 false)) -> (make-r"
 #"ect-info 10 20 1 2 true)"
) 0 0 24 29 1 #"\n"
0 0 17 3 38 #";Strategy: using template of rectangle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"check-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"uncheck-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; rect-after-key-event : Rectangle KeyEvent -> Rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; RETURNS: the state of the rectangle that should follow the given"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; rectangle after the given key event"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"rect-after-key-event"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"add-speed-up"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"add-speed-down"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"add-speed-left"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"add-speed-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";add-speed-up:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"add-speed-up"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"add-speed-down"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"add-speed-left"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"add-speed-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; rect-after-mouse-event :  Rectangle Int Int MouseEvent -> Rectang"
 #"le"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; GIVEN: A rectangle, the x- and y-coordinates of a mouse event, an"
 #"d the"
) 0 0 24 29 1 #"\n"
0 0 17 3 14 #";; mouse event"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; RETURNS: the rectangle that should follow the given rectangle aft"
 #"er"
) 0 0 24 29 1 #"\n"
0 0 17 3 24 #";; the given mouse event"
0 0 24 29 1 #"\n"
0 0 17 3 103
(
 #";; Example: (rect-after-mouse-event (make-rect-info 100 200 -10 -20 "
 #"false 10 20) 100 200 \"button-down\")"
) 0 0 24 29 1 #"\n"
0 0 17 3 56 #";           -> (make-rect-info 100 200 -10 -20 true 0 0)"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";  Strategy: dividing into cases; combining simpler functions"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"rect-after-mouse-event"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"mouse=?"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"button-up\""
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 3 #") ("
0 0 14 3 7 #"case-up"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"mouse=?"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"button-down\""
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 3 #") ("
0 0 14 3 9 #"case-down"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"mouse=?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 3 #") ("
0 0 14 3 9 #"case-drag"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 22 #"rect-after-mouse-event"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"button-down\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 22 #"rect-after-mouse-event"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"button-down\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 22 #"rect-after-mouse-event"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"button-up\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 22 #"rect-after-mouse-event"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"button-up\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 22 #"rect-after-mouse-event"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 22 #"rect-after-mouse-event"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 22 #"rect-after-mouse-event"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"enter\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";case-up: rectangle NonNegInt NonNegInt -> rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";case-down: rectangle NonNegInt NonNegInt -> rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";GIVEN: a rectangle, x coordinate of mouse, y coordinate of mouse"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";RETURNS: a rectangle following the given one, with its selected? at"
 #"tribute"
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";         updated according to mouse position"
0 0 24 29 1 #"\n"
0 0 17 3 101
(
 #";Example: (case-up (make-rect-info 100 200 10 20 true) 35 45) -> (ma"
 #"ke-rect-info 100 200 10 20 false)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"case-up"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"if-selected"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"uncheck-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"case-down"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 9 #"if-inside"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 3 #") ("
0 0 14 3 19 #"update-relative-pos"
0 0 24 3 2 #" ("
0 0 14 3 10 #"check-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"case-drag"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 11 #"if-selected"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 15 #"rect-movement-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 15 #"rect-movement-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 12 #"rect-info-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";rect-movement-x: rect-info NonNegInt -> Int"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;rect-movement-y: rect-info NonNegInt -> Int"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";GIVEN: a rectangle, x coordinate of mouse"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";RETURNS: distance the rectangle need to move along x/y direction"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";Example: (rect-movement-x (make-rect-info 100 200 10 20 true 20 10)"
 #" 50) -> 30"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-movement-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-rx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-movement-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-info-ry"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-info-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 2 #"my"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; rect-selected? : Rectangle -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; GIVEN: rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; RETURNS: true iff the given rectangle is selected."
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; Example: (rect-selected? (make-rect-info 100 200 10 20 false)) ->"
 #" false"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rect-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 19 #"rect-info-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rect-selected?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rect-selected?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; new-rectangle : NonNegInt NonNegInt Int Int -> Rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; GIVEN: 2 non-negative integers x and y, and 2 integers vx and vy"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; RETURNS: an unselected rectangle centered at (x,y), which will tr"
 #"avel with"
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #";; velocity (vx, vy)."
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; Example: (new-rectangle 100 200 10 20) -> (new-rectangle 100 200 "
 #"10 20 false)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"new-rectangle"
0 0 24 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 1 #" "
0 0 14 3 2 #"i1"
0 0 24 3 1 #" "
0 0 14 3 2 #"i2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 1 #" "
0 0 14 3 2 #"i1"
0 0 24 3 1 #" "
0 0 14 3 2 #"i2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"new-rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-rect-info"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0           0
